name: Deploy Chan-Ko Website to GCP
run-name: Deploy Chan-Ko Website to GCP - ${{ inputs.environment }} by @${{ github.actor }}

on:
  push:
    tags:  # CalVer format 'vYY.MM.DD.XX', with 'YY' being 24, 'MM' being the month, 'DD' being the day, and 'XX' being a two-digit build number.
      - 'v24.((02.(0[1-9]|[12][1-9]))|((0[13578]|1[02]).(0[1-9]|[12]\d|3[01]))|((0[469]|11).(0[1-9]|[12]\d|30))).[0-9]{2}'
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Environment to build and publish e.g. sit, dev
        default: prod
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --filter chan-ko-website

    - name: Build website
      run: |
       VITE_ENVIRONMENT=${{ inputs.environment }} \
       VITE_CHANKO_WEBSITE_CONTACT_FORM_ENDPOINT=${{ secrets.CHANKO_WEBSITE_CONTACT_FORM_ENDPOINT }} \
       VITE_VERSION=${{ github.ref_name }} \
       pnpm --filter chan-ko-website build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.CHANKO_WEBSITE_GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.CHANKO_WEBSITE_GCP_PROJECT_ID }}

    - name: Deploy to GCP
      env:
        DOMAIN: chan-ko.com
        CERTBOT_EMAIL: ${{ secrets.CHANKO_DEVOPS_EMAIL }}
      run: |
        chmod +x ./deploy-chan-ko-website.sh
        ./deploy-chan-ko-website.sh "$DOMAIN" "$CERTBOT_EMAIL" "${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }}" "${{ secrets.CHANKO_WEBSITE_GCE_ZONE }}"

    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --draft --generate-notes
