name: Deploy Chan-Ko Website to GCP

on:
  push:
    tags:
      - 'v*' # This will trigger the workflow for any tag starting with 'v'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --filter chan-ko-website

    - name: Build website
      run: pnpm --filter chan-ko-website build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.CHANKO_WEBSITE_GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.CHANKO_WEBSITE_GCP_PROJECT_ID }}

    - name: Deploy to GCP
      env:
        DOMAIN: chan-ko.com
        CERTBOT_EMAIL: ${{ secrets.CHANKO_DEVOPS_EMAIL }}
      run: |
        if ! gcloud compute instances describe ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }} --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }}; then
          gcloud compute instances create ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }} \
            --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} \
            --machine-type=e2-micro \
            --tags=http-server,https-server \
            --metadata=startup-script='#! /bin/bash
              apt-get update
              apt-get install -y nginx certbot python3-certbot-nginx
              systemctl enable nginx
              systemctl start nginx
            '
        fi

        echo "Waiting for instance to be ready..."
        sleep 90

        echo "Ensure nginx is installed and running"
        gcloud compute ssh ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }} --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} --command='
          if ! command -v nginx &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y nginx certbot python3-certbot-nginx
          fi
          sudo systemctl enable nginx
          sudo systemctl start nginx
          sudo mkdir -p /var/www/html
          sudo chown -R $(whoami):$(whoami) /var/www/html

          echo "Obtaining SSL certificate"
          sudo certbot --nginx -d '"$DOMAIN"' --non-interactive --agree-tos --email '"$CERTBOT_EMAIL"'
        '

        echo "Copying files..."
        gcloud compute scp --recurse --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} packages/chan-ko-website/dist/* ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }}:/var/www/html/

        echo "Setting permissions and restarting nginx..."
        gcloud compute ssh ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }} --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} --command='
          sudo chown -R www-data:www-data /var/www/html

          echo '"Updating Nginx config to force HTTPS"'
          sudo bash -c "cat > /etc/nginx/sites-available/default << EOF
          server {
              listen 80;
              server_name '"$DOMAIN"';
              return 301 https://\$server_name\$request_uri;
          }

          server {
              listen 443 ssl;
              server_name '"$DOMAIN"';

              ssl_certificate /etc/letsencrypt/live/'"$DOMAIN"'/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/'"$DOMAIN"'/privkey.pem;

              root /var/www/html;
              index index.html;

              location / {
                  try_files \$uri \$uri/ =404;
              }
          }
          EOF"

          sudo nginx -t && sudo systemctl restart nginx
        '

        gcloud compute ssh ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }} --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} --command='sudo mkdir -p /var/www/html && sudo chown -R $(whoami):$(whoami) /var/www/html'
        gcloud compute scp --recurse --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} packages/chan-ko-website/dist/* ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }}:/var/www/html/
        gcloud compute ssh ${{ secrets.CHANKO_WEBSITE_GCE_INSTANCE_NAME }} --zone=${{ secrets.CHANKO_WEBSITE_GCE_ZONE }} --command='sudo systemctl restart nginx'


    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
